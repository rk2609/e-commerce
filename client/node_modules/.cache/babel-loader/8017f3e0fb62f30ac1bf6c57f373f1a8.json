{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\e-commerce\\\\src\\\\components\\\\sign-up\\\\sign-up.jsx\";\nimport React from \"react\";\nimport \"./sign-up.scss\";\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { signUpStart } from \"../../redux/user/user-actions\";\nimport { connect } from \"react-redux\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      signUpStart(displayName, email, password);\n      /*\r\n      try {\r\n        const { user } = await auth.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n        await createUserProfileDocument(user, { displayName });\r\n          this.setState({\r\n          displayName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      */\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"displayName\",\n      type: \"text\",\n      value: displayName,\n      handleChange: this.handleChange,\n      required: true,\n      label: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      required: true,\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      required: true,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      required: true,\n      label: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \" Sign Up \")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/react/e-commerce/src/components/sign-up/sign-up.jsx"],"names":["React","FormInput","CustomButton","signUpStart","connect","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./sign-up.scss\";\r\nimport FormInput from \"../form-input/form-input\";\r\nimport CustomButton from \"../custom-button/custom-button\";\r\nimport { signUpStart } from \"../../redux/user/user-actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    const { signUpStart } = this.props;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart(displayName, email, password);\r\n\r\n    /*\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      await createUserProfileDocument(user, { displayName });\r\n\r\n      this.setState({\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    */\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    return (\r\n      <div className=\"sign-up\">\r\n        <h2 className=\"title\">I do not have an account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            name=\"displayName\"\r\n            type=\"text\"\r\n            value={displayName}\r\n            handleChange={this.handleChange}\r\n            required\r\n            label=\"Name\"\r\n          />\r\n          <FormInput\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            handleChange={this.handleChange}\r\n            required\r\n            label=\"Email\"\r\n          />\r\n          <FormInput\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            handleChange={this.handleChange}\r\n            required\r\n            label=\"Password\"\r\n          />\r\n          <FormInput\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            handleChange={this.handleChange}\r\n            required\r\n            label=\"Confirm Password\"\r\n          />\r\n          <CustomButton type=\"submit\"> Sign Up </CustomButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (displayName, email, password) =>\r\n    dispatch(signUpStart({ displayName, email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}