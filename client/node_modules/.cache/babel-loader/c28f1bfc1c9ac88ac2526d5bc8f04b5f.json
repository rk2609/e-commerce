{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { ShopActionTypes } from \"./shop-action-types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop-actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n  /*collectionRef\r\n    .get()\r\n    .then((snapShot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));*/\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/react/e-commerce/src/redux/shop/shop-saga.js"],"names":["takeEvery","call","put","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAC/BM,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMX,GAAG,CAACE,uBAAuB,CAACW,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACG,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AAED;;;;;;;;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,SAAS,CACbG,eAAe,CAACgB,uBADH,EAEbX,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { ShopActionTypes } from \"./shop-action-types\";\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n} from \"./shop-actions\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log(\"I am fired\");\r\n\r\n  try {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n\r\n  /*collectionRef\r\n    .get()\r\n    .then((snapShot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));*/\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}